labs(x = "Pre-experimental Stimulus Familiarity",
y = "Source Memory Accuracy (%)",
fill='Item Repetition') +
coord_cartesian(ylim = c(0, 100), clip = "on") +
theme_bw(base_size = 18) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
ww.corr.aov <- aov_ez(id = "SID", dv = "Accuracy", data = P3ACCslong,
between = "Familiarity", within = "Repetition")
anova(ww.corr.aov, es = "pes") %>% kable(digits = 4)
ww.corr.aov.r1 <- aov_ez(id = "SID", dv = "Accuracy", within = "Repetition",
data = filter(P3ACCslong, Familiarity == "Words"))
anova(ww.corr.aov.r1, es = "pes") %>% kable(digits = 4)
ww.corr.aov.r2 <- aov_ez(id = "SID", dv = "Accuracy", within = "Repetition",
data = filter(P3ACCslong, Familiarity == "Pseudowords"))
anova(ww.corr.aov.r2, es = "pes") %>% kable(digits = 4)
load("RData/afex_FamSM_Exp2Word_Acc.RData")
full.compare <- cbind(afex::nice(full1), afex::nice(full2)[,-c(1,2)])
colnames(full.compare)[c(3,4,5,6)] <- c("full1 Chisq", "p","full2 Chisq", "p")
full.compare %>% kable()
emmeans(full1, pairwise ~ Repetition | Familiarity, type = "response")$contrasts %>% kable()
P3CFslong <- P3 %>% group_by(SID, Familiarity, Repetition) %>%
summarise(Confidence = mean(Confident)) %>%
ungroup()
P3CFg <- P3CFslong %>%
group_by(Familiarity, Repetition) %>%
summarise(M = mean(Confidence), SD = sd(Confidence)) %>%
ungroup()
P3CFg %>% kable()
# wide format, needed for geom_segments.
P3CFswide <- P3CFslong %>% spread(key = Repetition, value = Confidence)
# group level, needed for printing & geom_pointrange
# Rmisc must be called indirectly due to incompatibility between plyr and dplyr.
P3CFg$ci <- Rmisc::summarySEwithin(data = P3CFslong, measurevar = "Confidence", idvar = "SID",
withinvars = "Repetition", betweenvars = "Familiarity")$ci
P3CFg$Confidence <- P3CFg$M
ggplot(data=P3CFslong, aes(x=Familiarity, y=Confidence, fill=Repetition)) +
geom_violin(width = 0.5, trim=TRUE) +
geom_point(position=position_dodge(0.5), color="gray80", size=1.8, show.legend = FALSE) +
geom_segment(data=filter(P3CFswide, Familiarity=="Words"), inherit.aes = FALSE,
aes(x=1-.12, y=filter(P3CFswide, Familiarity=="Words")$Repeated,
xend=1+.12, yend=filter(P3CFswide, Familiarity=="Words")$Unrepeated),
color="gray80") +
geom_segment(data=filter(P3CFswide, Familiarity=="Pseudowords"), inherit.aes = FALSE,
aes(x=2-.12, y=filter(P3CFswide, Familiarity=="Pseudowords")$Repeated,
xend=2+.12, yend=filter(P3CFswide, Familiarity=="Pseudowords")$Unrepeated),
color="gray80") +
geom_pointrange(data=P3CFg,
aes(x = Familiarity, ymin = Confidence-ci, ymax = Confidence+ci, group = Repetition),
position = position_dodge(0.5), color = "darkred", size = 1, show.legend = FALSE) +
scale_fill_manual(values=c("#E69F00", "#56B4E9"),
labels=c("Repeated", "Unrepeated")) +
labs(x = "Pre-experimental Stimulus Familiarity",
y = "Source Memory Confidence",
fill='Item Repetition') +
coord_cartesian(ylim = c(1, 4), clip = "on") +
theme_bw(base_size = 18) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
# phase 3, subject-level, long-format
P3ACCslong <- P3 %>% group_by(SID, Familiarity, Repetition) %>%
summarise(Accuracy = mean(Corr)*100) %>%
ungroup()
# summary table
P3ACCg <- P3ACCslong %>% group_by(Familiarity, Repetition) %>%
summarise(M = mean(Accuracy), SD = sd(Accuracy)) %>%
ungroup()
P3ACCg %>% kable()
# wide format, needed for geom_segments.
P3ACCswide <- P3ACCslong %>% spread(key = Repetition, value = Accuracy)
# group level, needed for printing & geom_pointrange
# Rmisc must be called indirectly due to incompatibility between plyr and dplyr.
P3ACCg$ci <- Rmisc::summarySEwithin(data = P3ACCslong, measurevar = "Accuracy", idvar = "SID",
withinvars = "Repetition", betweenvars = "Familiarity")$ci
P3ACCg$Accuracy <- P3ACCg$M
ggplot(data=P3ACCslong, aes(x=Familiarity, y=Accuracy, fill=Repetition)) +
geom_violin(width = 0.5, trim=TRUE) +
geom_point(position=position_dodge(0.5), color="gray80", size=1.8, show.legend = FALSE) +
geom_segment(data=filter(P3ACCswide, Familiarity=="Words"), inherit.aes = FALSE,
aes(x=1-.12, y=filter(P3ACCswide, Familiarity=="Words")$Repeated,
xend=1+.12, yend=filter(P3ACCswide, Familiarity=="Words")$Unrepeated),
color="gray80") +
geom_segment(data=filter(P3ACCswide, Familiarity=="Pseudowords"), inherit.aes = FALSE,
aes(x=2-.12, y=filter(P3ACCswide, Familiarity=="Pseudowords")$Repeated,
xend=2+.12, yend=filter(P3ACCswide, Familiarity=="Pseudowords")$Unrepeated),
color="gray80") +
geom_pointrange(data=P3ACCg,
aes(x = Familiarity, ymin = Accuracy-ci, ymax = Accuracy+ci, group = Repetition),
position = position_dodge(0.5), color = "darkred", size = 1, show.legend = FALSE) +
scale_fill_manual(values=c("#E69F00", "#56B4E9"),
labels=c("Repeated", "Unrepeated")) +
labs(x = "Pre-experimental Stimulus Familiarity",
y = "Source Memory Accuracy (%)",
fill='Item Repetition') +
coord_cartesian(ylim = c(0, 100), clip = "on") +
theme_bw(base_size = 18) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
p3.corr.aov <- aov_ez(id = "SID", dv = "Accuracy", data = P3ACCslong,
between = "Familiarity", within = "Repetition")
anova(p3.corr.aov, es = "pes") %>% kable(digits = 4)
p3.corr.aov.r1 <- aov_ez(id = "SID", dv = "Accuracy", within = "Repetition",
data = filter(P3ACCslong, Familiarity == "Words"))
anova(p3.corr.aov.r1, es = "pes") %>% kable(digits = 4)
p3.corr.aov.r2 <- aov_ez(id = "SID", dv = "Accuracy", within = "Repetition",
data = filter(P3ACCslong, Familiarity == "Pseudowords"))
anova(p3.corr.aov.r2, es = "pes") %>% kable(digits = 4)
load("RData/afex_FamSM_Exp2Word_Acc.RData")
P3CFslong <- P3 %>% group_by(SID, Familiarity, Repetition) %>%
summarise(Confidence = mean(Confident)) %>%
ungroup()
P3CFg <- P3CFslong %>%
group_by(Familiarity, Repetition) %>%
summarise(M = mean(Confidence), SD = sd(Confidence)) %>%
ungroup()
P3CFg %>% kable()
# wide format, needed for geom_segments.
P3CFswide <- P3CFslong %>% spread(key = Repetition, value = Confidence)
# group level, needed for printing & geom_pointrange
# Rmisc must be called indirectly due to incompatibility between plyr and dplyr.
P3CFg$ci <- Rmisc::summarySEwithin(data = P3CFslong, measurevar = "Confidence", idvar = "SID",
withinvars = "Repetition", betweenvars = "Familiarity")$ci
P3CFg$Confidence <- P3CFg$M
ggplot(data=P3CFslong, aes(x=Familiarity, y=Confidence, fill=Repetition)) +
geom_violin(width = 0.5, trim=TRUE) +
geom_point(position=position_dodge(0.5), color="gray80", size=1.8, show.legend = FALSE) +
geom_segment(data=filter(P3CFswide, Familiarity=="Words"), inherit.aes = FALSE,
aes(x=1-.12, y=filter(P3CFswide, Familiarity=="Words")$Repeated,
xend=1+.12, yend=filter(P3CFswide, Familiarity=="Words")$Unrepeated),
color="gray80") +
geom_segment(data=filter(P3CFswide, Familiarity=="Pseudowords"), inherit.aes = FALSE,
aes(x=2-.12, y=filter(P3CFswide, Familiarity=="Pseudowords")$Repeated,
xend=2+.12, yend=filter(P3CFswide, Familiarity=="Pseudowords")$Unrepeated),
color="gray80") +
geom_pointrange(data=P3CFg,
aes(x = Familiarity, ymin = Confidence-ci, ymax = Confidence+ci, group = Repetition),
position = position_dodge(0.5), color = "darkred", size = 1, show.legend = FALSE) +
scale_fill_manual(values=c("#E69F00", "#56B4E9"),
labels=c("Repeated", "Unrepeated")) +
labs(x = "Pre-experimental Stimulus Familiarity",
y = "Source Memory Confidence",
fill='Item Repetition') +
coord_cartesian(ylim = c(1, 4), clip = "on") +
theme_bw(base_size = 18) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
p3.conf.aov <- aov_ez(id = "SID", dv = "Confidence", data = P3CFslong,
between = "Familiarity", within = "Repetition")
anova(p3.conf.aov, es = "pes") %>% kable(digits = 4)
p3.conf.aov.r1 <- aov_ez(id = "SID", dv = "Confidence", within = "Repetition",
data = filter(P3CFslong, Familiarity == "Words"))
anova(p3.conf.aov.r1, es = "pes") %>% kable(digits = 4)
p3.conf.aov.r2 <- aov_ez(id = "SID", dv = "Confidence", within = "Repetition",
data = filter(P3CFslong, Familiarity == "Pseudowords"))
anova(p3.conf.aov.r2, es = "pes") %>% kable(digits = 4)
P3R <- P3
P3R$Confident = factor(P3R$Confident, ordered = TRUE)
P3R$SID = factor(P3R$SID)
load("RData/clmm_FamSM_Exp2Word_Conf.RData")
cm.comp <- anova(cm.full, cm.red1, cm.red2, cm.red3)
data.frame(Effect = c("Familiarity", "Repetition", "Familiarity:Repetition"),
df = 1, Chisq = cm.comp$LR.stat[2:4], p = cm.comp$`Pr(>Chisq)`[2:4]) %>% kable()
emmeans(cm.full, pairwise ~ Repetition | Familiarity)$contrasts %>% kable()
temp <- emmeans(cm.full,~Familiarity:Repetition|cut, mode="linear.predictor")
temp <- rating.emmeans(temp)
temp <- temp %>% unite(Condition, c("Familiarity", "Repetition"))
ggplot(data = temp, aes(x = Rating, y = Prob, group = Condition)) +
geom_line(aes(color = Condition), size = 1.2) +
geom_point(aes(shape = Condition, color = Condition), size = 4, fill = "white", stroke = 1.2) +
scale_color_manual(values=c("#56B4E9", "#56B4E9", "#E69F00", "#E69F00")) +
scale_shape_manual(name="Condition", values=c(21,24,21,24)) +
labs(y = "Response Probability", x = "Rating") +
expand_limits(y=0) +
scale_y_continuous(limits = c(0, 0.6)) +
scale_x_discrete(labels = c("1" = "1(Guessed)","4"="4(Sure)")) +
theme_minimal() +
theme(text = element_text(size=18))
cP3 <- P3 %>% filter(Corr==1)
sP3 <- cP3 %>% filter(RT > 200 & RT < 10000) %>%
group_by(SID) %>%
nest() %>%
mutate(lbound = map(data, ~mean(.$RT)-3*sd(.$RT)),
ubound = map(data, ~mean(.$RT)+3*sd(.$RT))) %>%
unnest(lbound, ubound) %>%
unnest(data) %>%
ungroup() %>%
mutate(Outlier = (RT < lbound)|(RT > ubound)) %>%
filter(Outlier == FALSE) %>%
select(SID, Familiarity, Repetition, RT, ImgName)
100 - 100*nrow(sP3)/nrow(cP3)
P3RTslong <- sP3 %>% group_by(SID, Familiarity, Repetition) %>%
summarise(RT = mean(RT)) %>%
ungroup()
P3RTg <- P3RTslong %>% group_by(Familiarity, Repetition) %>%
summarise(M = mean(RT), SD = sd(RT)) %>%
ungroup()
P3RTg %>% kable()
# wide format, needed for geom_segments.
P3RTswide <- P3RTslong %>% spread(key = Repetition, value = RT)
# group level, needed for printing & geom_pointrange
# Rmisc must be called indirectly due to incompatibility between plyr and dplyr.
P3RTg$ci <- Rmisc::summarySEwithin(data = P3RTslong, measurevar = "RT", idvar = "SID",
withinvars = "Repetition", betweenvars = "Familiarity")$ci
P3RTg$RT <- P3RTg$M
ggplot(data=P3RTslong, aes(x=Familiarity, y=RT, fill=Repetition)) +
geom_violin(width = 0.5, trim=TRUE) +
geom_point(position=position_dodge(0.5), color="gray80", size=1.8, show.legend = FALSE) +
geom_segment(data=filter(P3RTswide, Familiarity=="Words"), inherit.aes = FALSE,
aes(x=1-.12, y=filter(P3RTswide, Familiarity=="Words")$Repeated,
xend=1+.12, yend=filter(P3RTswide, Familiarity=="Words")$Unrepeated),
color="gray80") +
geom_segment(data=filter(P3RTswide, Familiarity=="Pseudowords"), inherit.aes = FALSE,
aes(x=2-.12, y=filter(P3RTswide, Familiarity=="Pseudowords")$Repeated,
xend=2+.12, yend=filter(P3RTswide, Familiarity=="Pseudowords")$Unrepeated),
color="gray80") +
geom_pointrange(data=P3RTg,
aes(x = Familiarity, ymin = RT-ci, ymax = RT+ci, group = Repetition),
position = position_dodge(0.5), color = "darkred", size = 1, show.legend = FALSE) +
scale_fill_manual(values=c("#E69F00", "#56B4E9"),
labels=c("Repeated", "Unrepeated")) +
labs(x = "Pre-experimental Stimulus Familiarity",
y = "Response Times (ms)",
fill='Item Repetition') +
theme_bw(base_size = 18) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
p3.rt.aov <- aov_ez(id = "SID", dv = "RT", data = sP3,
between = "Familiarity", within = "Repetition")
anova(p3.rt.aov, es = "pes") %>% kable(digits = 4)
p3.rt.aov.r1 <- aov_ez(id = "SID", dv = "RT", within = "Repetition",
data = filter(sP3, Familiarity == "Words"))
anova(p3.rt.aov.r1, es = "pes") %>% kable(digits = 4)
pacman::p_load(R.matlab)
dat <- readMat("~/Dropbox/2017Experiment/MetaD/motion_metad_exp1lrn.mat")
dat
dat$fit1[,,1]$Mratio
m1 <- dat$fit1[,,1]$Mratio
m2 <- dat$fit1[,,2]$Mratio
m2 <- dat$fit2[,,1]$Mratio
plot(m1, m2)
segments(.5, .5, 2, 2)
df <- data.frame(SN = c(1:10), Block12 = m1, Block345 = m2)
df
m1
class(m1)
as.numeric(m1)
data.frame(SN = c(1:10), Block12 = as.numeric(m1), Block345 = as.numeric(m2))
df <- data.frame(SN = c(1:10), Block12 = as.numeric(m1), Block345 = as.numeric(m2))
ggplot(df, aes(x = Block12, y = Block345))
pacman::p_load(R.matlab, ggplot2)
ggplot(df, aes(x = Block12, y = Block345))
ggplot(df, aes(x = Block12, y = Block345)) +
geom_point()
ggplot(df, aes(x = Block12, y = Block345)) +
geom_point() +
geom_smooth(method = lm)
ggplot(df, aes(x = Block12, y = Block345)) +
geom_point() +
coord_cartesian(xlim = c(.7, 2), ylim = c(.7, 2), clip = "on")
ggplot(df, aes(x = Block12, y = Block345)) +
geom_point() +
coord_cartesian(xlim = c(.7, 2), ylim = c(.7, 2), clip = "on") +
labs(x = "MetaD in Block 1~2",
y = "MetaD in Block 1~3") +
# scale_x_discrete(labels = c("1" = "1(Guessed)","4"="4(Recognized)")) +
theme_bw(base_size = 18) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position = "none")
ggplot(df, aes(x = Block12, y = Block345)) +
geom_point() +
coord_cartesian(xlim = c(.7, 2), ylim = c(.7, 2), clip = "on") +
labs(x = "MetaD in Block 1~2",
y = "MetaD in Block 3~5") +
geom_abline(intercept = 0, slope = 1) +
theme_bw(base_size = 18) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position = "none")
ggplot(df, aes(x = Block12, y = Block345)) +
geom_point() +
coord_cartesian(xlim = c(.7, 2), ylim = c(.7, 2), clip = "on") +
labs(x = "MetaD in Block 1~2",
y = "MetaD in Block 3~5") +
geom_abline(intercept = 0, slope = 1) +
theme_bw(base_size = 18) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position = "none") +
coord_fixed(ratio=1)
ggplot(df, aes(x = Block12, y = Block345)) +
geom_point() +
coord_cartesian(xlim = c(.7, 2), ylim = c(.7, 2), clip = "on") +
labs(x = "MetaD in Block 1~2",
y = "MetaD in Block 3~5") +
geom_abline(intercept = 0, slope = 1) +
theme_bw(base_size = 18) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position = "none",
aspect.ratio = 1)
m1
m2
dat$fit1[,,1]
.3863254/0.425945
dat$fit2[,,1]
ggplot(df, aes(x = Block12, y = Block345)) +
geom_point() +
coord_cartesian(xlim = c(.7, 2), ylim = c(.7, 2), clip = "on") +
labs(x = "MetaD in Block 1~2",
y = "MetaD in Block 3~5") +
geom_abline(intercept = 0, slope = 1) +
geom_hline(yintercept = 1) +
geom_vline(xintercept = 1) +
theme_bw(base_size = 18) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position = "none",
aspect.ratio = 1)
ggplot(df, aes(x = Block12, y = Block345)) +
geom_point(color = "blue", alpha = .5, size = 2) +
coord_cartesian(xlim = c(.7, 2), ylim = c(.7, 2), clip = "on") +
labs(x = "MetaD in Block 1~2",
y = "MetaD in Block 3~5") +
geom_abline(intercept = 0, slope = 1) +
geom_hline(yintercept = 1) +
geom_vline(xintercept = 1) +
theme_bw(base_size = 18) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position = "none",
aspect.ratio = 1)
ggplot(df, aes(x = Block12, y = Block345)) +
geom_point(color = "blue", alpha = .5, size = 5) +
coord_cartesian(xlim = c(.7, 2), ylim = c(.7, 2), clip = "on") +
labs(x = "MetaD in Block 1~2",
y = "MetaD in Block 3~5") +
geom_abline(intercept = 0, slope = 1) +
geom_hline(yintercept = 1) +
geom_vline(xintercept = 1) +
theme_bw(base_size = 18) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position = "none",
aspect.ratio = 1)
?geom_hline
ggplot(df, aes(x = Block12, y = Block345)) +
geom_point(color = "blue", alpha = .5, size = 5) +
coord_cartesian(xlim = c(.7, 2), ylim = c(.7, 2), clip = "on") +
labs(x = "MetaD in Block 1~2",
y = "MetaD in Block 3~5") +
geom_abline(intercept = 0, slope = 1) +
geom_hline(yintercept = 1, linetype = "dotted") +
geom_vline(xintercept = 1) +
theme_bw(base_size = 18) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position = "none",
aspect.ratio = 1)
ggplot(df, aes(x = Block12, y = Block345)) +
geom_point(color = "blue", alpha = .5, size = 5) +
coord_cartesian(xlim = c(.7, 2), ylim = c(.7, 2), clip = "on") +
labs(x = "MetaD in Block 1~2",
y = "MetaD in Block 3~5") +
geom_abline(intercept = 0, slope = 1) +
geom_hline(yintercept = 1, linetype = "dotted") +
geom_vline(xintercept = 1, linetype = "dotted") +
theme_bw(base_size = 18) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position = "none",
aspect.ratio = 1)
ggplot(df, aes(x = Block12, y = Block345)) +
geom_point(color = "blue", alpha = .5, size = 5) +
coord_cartesian(xlim = c(.7, 2), ylim = c(.7, 2), clip = "on") +
labs(x = "Meta-d'/d' in Block 1~2",
y = "Meta-d'/d' in Block 3~5") +
geom_abline(intercept = 0, slope = 1) +
geom_hline(yintercept = 1, linetype = "dotted") +
geom_vline(xintercept = 1, linetype = "dotted") +
theme_bw(base_size = 18) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position = "none",
aspect.ratio = 1)
dat$fit1[,,1]
d1 <- dat$fit1[,,1]$d1
d2 <- dat$fit2[,,1]$d1
df <- data.frame(SN = c(1:10), Block12 = as.numeric(d1), Block345 = as.numeric(d2))
ggplot(df, aes(x = Block12, y = Block345)) +
geom_point(color = "blue", alpha = .5, size = 5) +
coord_cartesian(xlim = c(.7, 2), ylim = c(.7, 2), clip = "on") +
labs(x = "Meta-d'/d' in Block 1~2",
y = "Meta-d'/d' in Block 3~5") +
geom_abline(intercept = 0, slope = 1) +
geom_hline(yintercept = 1, linetype = "dotted") +
geom_vline(xintercept = 1, linetype = "dotted") +
theme_bw(base_size = 18) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position = "none",
aspect.ratio = 1)
ggplot(df, aes(x = Block12, y = Block345)) +
geom_point(color = "blue", alpha = .5, size = 5) +
# coord_cartesian(xlim = c(.7, 2), ylim = c(.7, 2), clip = "on") +
labs(x = "Meta-d'/d' in Block 1~2",
y = "Meta-d'/d' in Block 3~5") +
geom_abline(intercept = 0, slope = 1) +
geom_hline(yintercept = 1, linetype = "dotted") +
geom_vline(xintercept = 1, linetype = "dotted") +
theme_bw(base_size = 18) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position = "none",
aspect.ratio = 1)
install.packages(c("BDgraph", "cli", "colorspace", "fs", "git2r", "robustbase", "rstudioapi", "shinyWidgets"))
setwd("~/Documents/GitHub/rworkshop2019/")
pacman::p_load(tidyverse)
pacman::p_load_gh("crsh/papaja", "thomasp85/patchwork")
DD <- read.csv("demodata_antipriming.csv", header = T)
length(unique(DD$SID)) # N = 36
DD$SID <- factor(DD$SID)
glimpse(DD)
table(DD$SID)
table(DD$StudyResp, DD$SID)
table(DD$Visibility, DD$SID)
D2 <- na.omit(DD)
dim(DD)
dim(D2)
glimpse(D2)
vD2slong <- D2 %>% group_by(SID, Visibility) %>%
summarise(Accuracy = mean(Correct)*100) %>%
ungroup()
vD2slong$Visibility = factor(vD2slong$Visibility, ordered = TRUE)
vD2g <- vD2slong %>% group_by(Visibility) %>%
summarise(M = mean(Accuracy)) %>%
ungroup()
vD2g$ci <- wsci(data = vD2slong, id = "SID", # the order of conditions must be checked.
factors = "Visibility", dv = "Accuracy")$Accuracy
# Recognition level
rD2slong <- D2 %>% group_by(SID, StudyResp) %>%
summarise(Accuracy = mean(Correct)*100) %>%
ungroup()
rD2slong$StudyResp = factor(rD2slong$StudyResp, ordered = TRUE)
rD2g <- rD2slong %>% group_by(StudyResp) %>%
summarise(M = mean(Accuracy)) %>%
ungroup()
rD2g$ci <- wsci(data = rD2slong, id = "SID", # the order of conditions must be checked.
factors = "StudyResp", dv = "Accuracy")$Accuracy
P1 <- ggplot(vD2g, mapping=aes(x = Visibility, y=M, group=1)) +
geom_ribbon(aes(ymin=M-ci, ymax=M+ci), fill="darkred", alpha=0.3) +
geom_line(colour="darkred", size = 1) +
geom_line(vD2slong, alpha = 0.3, show.legend = F,
mapping=aes(x=Visibility, y=Accuracy, group=SID, color=SID)) +
# geom_pointrange(rD2g, inherit.aes=FALSE,
#                 mapping=aes(x = Visibility, y=Accuracy,
#                             ymin = Accuracy - ci, ymax = Accuracy + ci),
#                 colour="darkred", size = 1) +
coord_cartesian(ylim = c(0, 100), clip = "on") +
labs(x = "Visibility",
y = "Identification Accuracy (%)") +
# scale_x_discrete(labels = c("1" = "1(Guessed)","4"="4(Recognized)")) +
theme_bw(base_size = 18) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position = "none")
# plot for recognition level
P2 <- ggplot(rD2g, mapping=aes(x = StudyResp, y=M, group=1)) +
geom_ribbon(aes(ymin=M-ci, ymax=M+ci), fill="darkred", alpha=0.3) +
geom_line(colour="darkred", size = 1) +
geom_line(rD2slong, alpha = 0.3, show.legend = F,
mapping=aes(x=StudyResp, y=Accuracy, group=SID, color=SID)) +
# geom_pointrange(rD2g, inherit.aes=FALSE,
#                 mapping=aes(x = StudyResp, y=Accuracy,
#                             ymin = Accuracy - ci, ymax = Accuracy + ci),
#                 colour="darkred", size = 1) +
coord_cartesian(ylim = c(0, 100), clip = "on") +
labs(x = "Recognition Level",
y = "Identification Accuracy (%)") +
scale_x_discrete(labels = c("1" = "Guessed","2" = "", "3" = "",
"4"="Recognized")) +
theme_bw(base_size = 18) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position = "none")
P1 + P2
pacman::p_load(tidyverse, papaja, knitr, afex, parallel, emmeans, ordinal, RVAideMemoire)
# options(digits=4)
rm(list=ls())
setwd("~/Dropbox/2017Experiment/newOSF/")
rm(list=ls())
P3 <- read.csv("data/data_FamSM_Exp1_Face_TST.csv", header = T) # 실험 1
glimpse(P3, width=50)
length(unique(P3$SID)) # should be 24 subjects
table(P3$SID) # should be 48 trials/subject
# Converting Fam (Famailiarity) and Rep (Repetition) to factors
P3$Familiarity = factor(P3$Familiarity, levels=c(1,2), labels=c("Famous","Non-famous"))
P3$Repetition = factor(P3$Repetition, levels=c(1,2), labels=c("Repeated","Unrepeated"))
glimpse(P3, width=50)
P3ACCslong <- P3 %>% group_by(SID, Familiarity, Repetition) %>%
summarise(Accuracy = mean(Corr)*100) %>%
ungroup()
P3ACCslong
P3ACCswide <- P3ACCslong %>% spread(key = Repetition, value = Accuracy)
P3ACCswide
con1 <- P3ACCslong %>% filter(Familiarity == "Famous")
con1
setwd("~/Documents/GitHub/rworkshop2019/")
pacman::p_load(tidyverse)
pacman::p_load_gh("crsh/papaja", "thomasp85/patchwork")
DD <- read.csv("demodata_antipriming.csv", header = T)
length(unique(DD$SID)) # N = 36
